"""init

Revision ID: 7937450b56bd
Revises: 
Create Date: 2019-07-25 12:38:25.913636

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7937450b56bd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('paid_through', sa.Date(), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('payment_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_type_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['payment_type_id'], ['payment_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tables',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('seats', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=True),
    sa.Column('display_name', sa.String(length=80), nullable=True),
    sa.Column('password', sa.Binary(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('table_id', sa.Integer(), nullable=False),
    sa.Column('stack', sa.Integer(), nullable=True),
    sa.Column('sitting_out', sa.Boolean(), nullable=True),
    sa.Column('seat', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('table_id', 'seat', name='unique_table_seat')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hands',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('table_id', sa.Integer(), nullable=False),
    sa.Column('dealer_id', sa.Integer(), nullable=False),
    sa.Column('next_id', sa.Integer(), nullable=False),
    sa.Column('rounds', sa.Integer(), nullable=True),
    sa.Column('state', sa.Enum('VOID', 'CLOSED', 'OPEN', name='state'), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dealer_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['next_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('players_active',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('betting_rounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hand_id', sa.Integer(), nullable=False),
    sa.Column('round_num', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('bet', sa.Integer(), nullable=True),
    sa.Column('bettor', sa.Integer(), nullable=False),
    sa.Column('state', sa.Enum('VOID', 'CLOSED', 'OPEN', name='state'), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bettor'], ['players.id'], ),
    sa.ForeignKeyConstraint(['hand_id'], ['hands.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hands_active',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('table_id', sa.Integer(), nullable=False),
    sa.Column('hand_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hand_id'], ['hands.id'], ),
    sa.ForeignKeyConstraint(['table_id'], ['tables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('holdings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('hand_id', sa.Integer(), nullable=False),
    sa.Column('is_board', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.CheckConstraint('(player_id IS NOT NULL) OR (is_board = TRUE)'),
    sa.ForeignKeyConstraint(['hand_id'], ['hands.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('pots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hand_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['hand_id'], ['hands.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('actions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('holding_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('BLIND', 'FOLD', 'CHECK', 'BET', name='actiontype'), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['holding_id'], ['holdings.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('betting_round_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('created_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['betting_round_id'], ['betting_rounds.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('betting_rounds_active',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('betting_round_id', sa.Integer(), nullable=False),
    sa.Column('hand_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['betting_round_id'], ['betting_rounds.id'], ),
    sa.ForeignKeyConstraint(['hand_id'], ['hands.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('holdings_to_cards',
    sa.Column('holding_id', sa.Integer(), nullable=False),
    sa.Column('card_id', sa.Integer(), nullable=False),
    sa.Column('exposed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['card_id'], ['cards.id'], ),
    sa.ForeignKeyConstraint(['holding_id'], ['holdings.id'], ),
    sa.PrimaryKeyConstraint('holding_id', 'card_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('holdings_to_cards')
    op.drop_table('betting_rounds_active')
    op.drop_table('bets')
    op.drop_table('actions')
    op.drop_table('pots')
    op.drop_table('holdings')
    op.drop_table('hands_active')
    op.drop_table('betting_rounds')
    op.drop_table('players_active')
    op.drop_table('hands')
    op.drop_table('transactions')
    op.drop_table('players')
    op.drop_table('users')
    op.drop_table('tables')
    op.drop_table('payments')
    op.drop_table('roles')
    op.drop_table('payment_types')
    op.drop_table('groups')
    op.drop_table('cards')
    # ### end Alembic commands ###
